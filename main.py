from config import API_TOKEN
import telebot
import os
import json
from broadcast import broadcast_message, broadcast_photo_bytes
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from telebot.types import InputMediaPhoto

bot = telebot.TeleBot(token=API_TOKEN)

def save_user_id(user_id):
    file_path = "users.json"
    if not os.path.exists(file_path):
        with open(file_path, "w") as f:
            json.dump([], f)

    with open(file_path, "r") as f:
        users = json.load(f)

    if user_id not in users:
        users.append(user_id)
        with open(file_path, "w") as f:
            json.dump(users, f, indent=4)
        print(f"‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° user ‡πÉ‡∏´‡∏°‡πà: {user_id}")
    else:
        print(f"‚ÑπÔ∏è user ‡πÄ‡∏î‡∏¥‡∏°: {user_id}")

def send_main_menu(bot, chat_id, message_id=None, edit=False):
    keyboard = InlineKeyboardMarkup()
    keyboard.row(
        InlineKeyboardButton("üìò ‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£ / ‡∏Ñ‡πà‡∏≤‡πÄ‡∏ó‡∏≠‡∏°", url="https://bit.ly/40ezbNB"),
        InlineKeyboardButton("üìÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô / ‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô", url="https://regis.nsru.ac.th/apr-login/login/2")
    )
    keyboard.row(
        InlineKeyboardButton("üë©‚Äçüè´ ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå", url="https://ms.nsru.ac.th/Personnel=3"),
        InlineKeyboardButton("üéâ ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏Ñ‡∏ì‡∏∞", url="https://ms.nsru.ac.th/Activity"),
        InlineKeyboardButton("üó∫Ô∏è  ‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà", callback_data="faq_map")
    )
    keyboard.row(
        InlineKeyboardButton("üìù‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤",callback_data="faq_list")
    )
    keyboard.row(
        InlineKeyboardButton("‚ùì FAQ", callback_data="faq_menu")
    )
    
    text = "üìå ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢:"
    if edit and message_id:
        bot.edit_message_text(chat_id=chat_id, message_id=message_id, text=text, reply_markup=keyboard)
    else:
        bot.send_message(chat_id=chat_id, text=text, reply_markup=keyboard)

    
@bot.message_handler(commands=['start']) 
def welcome(message):
    user_id = message.chat.id
    save_user_id(user_id)

    welcome_text = f'‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ {message.from_user.first_name} ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡∏â‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡∏≠‡∏∞‡πÑ‡∏£‡∏î‡∏µ?'
    bot.send_message(chat_id=user_id, text=welcome_text)
    send_main_menu(bot, chat_id=user_id)

@bot.message_handler(commands=['broadcast'])
def handle_broadcast(message):
    admin_id = 6448266873  
    if message.chat.id != admin_id:
        bot.reply_to(message, "‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ")
        return

    content = message.text[len("/broadcast "):].strip()
    if '|' in content:
        photo_path, text = content.split('|', 1)
        photo_path = photo_path.strip()
        text = text.strip()
        broadcast_message(bot, text=text, photo_path=photo_path)
    else:
        broadcast_message(bot, text=content)

    bot.reply_to(message, "‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")

@bot.message_handler(content_types=['photo'])
def handle_photo_broadcast(message):
    admin_id = 6448266873  
    if message.chat.id != admin_id:
        bot.reply_to(message, "‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏™‡πà‡∏á‡∏†‡∏≤‡∏û broadcast")
        return

    print("üì∏ ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å admin")

    photo = message.photo[-1]
    file_info = bot.get_file(photo.file_id)
    photo_data = bot.download_file(file_info.file_path)

    print("üì§ ‡πÄ‡∏£‡∏¥‡πà‡∏° broadcast ‡∏†‡∏≤‡∏û...")

    broadcast_photo_bytes(bot, photo_bytes=photo_data, caption=message.caption or None)

    bot.reply_to(message, "‚úÖ ‡∏™‡πà‡∏á‡∏†‡∏≤‡∏û broadcast ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")

@bot.callback_query_handler(func=lambda call: call.data == "faq_list")
def faq_list(call):
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton("üèõÔ∏è ‡πÄ‡∏û‡∏à‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢", url="https://www.facebook.com/nsrunews"))
    keyboard.add(InlineKeyboardButton("üí∞ ‡πÄ‡∏û‡∏à ‡∏Å‡∏≠‡∏á‡∏ó‡∏∏‡∏ô‡∏Å‡∏π‡πâ‡∏¢‡∏∑‡∏° (‡∏Å‡∏¢‡∏®.)", url="https://www.facebook.com/profile.php?id=100069385112013"))
    keyboard.add(InlineKeyboardButton("üóÇÔ∏è ‡πÄ‡∏û‡∏à ‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏™‡πà‡∏á‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏ß‡∏¥‡∏ä‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏á‡∏≤‡∏ô‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô", url="https://www.facebook.com/aprnsru"))
    keyboard.add(InlineKeyboardButton("üéì ‡πÄ‡∏û‡∏à ‡∏Å‡∏≠‡∏á‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤", url="https://www.facebook.com/studentnsru"))
    keyboard.add(InlineKeyboardButton("üë• ‡πÄ‡∏û‡∏à ‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏Ø", url="https://www.facebook.com/orgnsrupage"))
    keyboard.add(InlineKeyboardButton("üéØ ‡πÄ‡∏û‡∏à ‡∏á‡∏≤‡∏ô‡πÅ‡∏ô‡∏∞‡πÅ‡∏ô‡∏ß‡πÅ‡∏•‡∏∞‡∏ó‡∏∏‡∏ô‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤", url="https://www.facebook.com/profile.php?id=100064650644030"))
    keyboard.add(InlineKeyboardButton("üîô ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö", callback_data="back_to_main"))

    bot.edit_message_text(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        text="üìñ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£:",
        reply_markup=keyboard
    )
    bot.answer_callback_query(call.id)

@bot.callback_query_handler(func=lambda call: call.data == "faq_menu")
def faq_menu(call):
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton("üìÑ ‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡πà‡∏ô‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏Ç‡∏≠‡∏à‡∏ö", callback_data="faq_graduate_docs"))
    keyboard.add(InlineKeyboardButton("üßë‚Äçüè´ ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå", callback_data="faq_contact_teacher"))
    keyboard.add(InlineKeyboardButton("üìä ‡πÄ‡∏Å‡∏£‡∏î‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏ö", callback_data="faq_gpa_required"))
    keyboard.add(InlineKeyboardButton("üìù ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ô", callback_data="faq_registration_issue"))
    keyboard.add(InlineKeyboardButton("üîô ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö", callback_data="back_to_main"))

    bot.edit_message_text(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        text="üìñ ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ö‡πà‡∏≠‡∏¢\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£:",
        reply_markup=keyboard
    )
    bot.answer_callback_query(call.id)


@bot.callback_query_handler(func=lambda call: call.data == "back_to_main")
def back_to_main(call):
    try:
        bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
    except Exception as e:
        print(f"‚ö†Ô∏è ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ: {e}")

    send_main_menu(bot, chat_id=call.message.chat.id)
    bot.answer_callback_query(call.id)



@bot.callback_query_handler(func=lambda call: call.data.startswith("faq_") and call.data not in ["faq_menu", "faq_map"])
def answer_faq(call):
    answers = {
        "faq_graduate_docs": "üìÑ ‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡πà‡∏ô‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏Ç‡∏≠‡∏à‡∏ö:\n‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ì‡∏∞ ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ù‡πà‡∏≤‡∏¢‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô\n‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡∏¢‡∏∑‡πà‡∏ô‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏°‡∏î‡πÄ‡∏Ç‡∏ï‡∏ï‡∏≤‡∏°‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤",
        "faq_contact_teacher": "üßë‚Äçüè´ ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå:\n‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ó‡∏µ‡πà: https://ms.nsru.ac.th/Personnel=3\n‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡∏ï‡∏≤‡∏°‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ô",
        "faq_gpa_required": "üìä ‡πÄ‡∏Å‡∏£‡∏î‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏ö:\n‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ GPA ‡∏£‡∏ß‡∏°‡πÑ‡∏°‡πà‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤ 2.00 ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ß‡∏¥‡∏ä‡∏≤‡∏ï‡∏¥‡∏î I, W ‡∏´‡∏£‡∏∑‡∏≠ F ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏™‡∏∞‡∏™‡∏≤‡∏á",
        "faq_registration_issue": "üìù ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ô:\n‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏ì‡∏∞ ‡∏´‡∏£‡∏∑‡∏≠‡∏ù‡πà‡∏≤‡∏¢‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÇ‡∏î‡∏¢‡πÄ‡∏£‡πá‡∏ß‡∏´‡∏≤‡∏Å‡∏û‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô"
    }

    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton("üîô ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÄ‡∏°‡∏ô‡∏π FAQ", callback_data="faq_menu"))

    bot.edit_message_text(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        text=answers.get(call.data, "‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö"),
        reply_markup=keyboard
    )
    bot.answer_callback_query(call.id)


@bot.callback_query_handler(func=lambda call: call.data == "faq_map")
def send_map(call):
    bot.answer_callback_query(call.id)

    with open("C:/Users/pview/OneDrive/Desktop/map.jpg", "rb") as photo:
        media = InputMediaPhoto(photo, caption="üó∫Ô∏è ‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢\n\n‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏π‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ï‡πà‡∏≤‡∏á ‡πÜ ‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏û‡∏ô‡∏µ‡πâ")

        keyboard = InlineKeyboardMarkup()
        keyboard.add(InlineKeyboardButton("üîô ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö", callback_data="back_to_main"))

        bot.edit_message_media(
            media=media,
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            reply_markup=keyboard
        )

bot.polling()
